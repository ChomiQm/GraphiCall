@page "/auth"

@using GraphiCall.Client.DTO
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@attribute [Authorize]
@rendermode InteractiveAuto

@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Auth</PageTitle>

<style>
    .authentication-container {
        max-width: fit-content;
        margin: 0 auto;
        text-align: center;
    }

    h1, h2, h3 {
        color: #333;
    }

    .navigation-container {
        max-width: fit-content;
        border: 2px solid transparent;
        border-radius: 16px;
        background-color: #bfedff;
        display: block;
        margin-top: 20px;
        padding: 10px 10px 10px 10px;
        font-size: 24px;
    }

    .nav-link {
        display: inline-block;
        text-decoration: none;
        color: #000;
        border: 2px solid transparent;
        background-color: lightcyan;
        border-radius: 14px;
        margin: 5px 0 0 0;
        min-width: 200px;
    }

        .nav-link:hover {
            background-color: #007bff;
            color: #fff;
            font-weight: bold;
            border-color: #0056b3;
            outline: none;
        }

        .darkMode{
        background-color: black;
        }

        .whiteMode{
            background-color: white;
        }

</style>

@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert alert-success">@Message</div>
}


<div class="authentication-container">
    <h1>You are authenticated</h1>

    <AuthorizeView>
        <h2>Hello @context.User.Identity?.Name!</h2>
        <div class="navigation-container">
            <h2>@(isLang ? "Which of these do you want to use?" : "Czego chcesz użyć?") <br></h2>
            <div>
                <NavLink class="nav-link" href="/whiteboard">Whiteboard</NavLink>
            </div>
            <div>
                <NavLink class="nav-link" href="/note">@(isLang ? "Notes" : "Notatki")</NavLink>
            </div>
            <div>
                <NavLink class="nav-link" href="/calendar">@(isLang ? "Calendar" : "Kalendarz")</NavLink>
            </div>
            <div>
                <NavLink class="nav-link" href="/project">@(isLang ? "Project" : "Projekt")</NavLink>
            </div>
            <div>
                <NavLink class="nav-link" href="/chat">Chat</NavLink>
            </div>
        </div>
    </AuthorizeView>
</div>

@code {
    private string userId = null!;
    public bool isLang { get; set; }
    private string Message = string.Empty;
    string lang = null!;
    protected override async Task OnParametersSetAsync()
    {
        isLang = await Http.GetFromJsonAsync<bool>(Navigation.BaseUri + "language/getLang");
    }

    protected override async Task OnInitializedAsync()
    {
        lang = isLang ? "Project" : "Projekt";
    }

    private async Task HideMessageAfterDelay()
    {
        await Task.Delay(15000); // Czekaj 15 sekund
        Message = string.Empty;
        StateHasChanged();
    }

}
